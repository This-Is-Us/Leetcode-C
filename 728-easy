/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
bool judge(int num){
    int i=0,cnt=0;
    int p=num;
    int digits[5];
    for(i=0;i<5;i++){
        digits[i]=0;
    }
    i=0;
    int flag=0;
    while(num){
        if(num%10==0){
            flag=1;
            break;
        }
        else{
            digits[i++]=num%10;
            cnt++;
            num/=10;
        }
    }
    if(flag==1)return false;
    else{
        for(i=0;i<cnt;i++){
            if(p%digits[i]!=0){
                flag=1;
                break;
            }
        }
        if(flag==0)return true;
        else {return false;}
    }
}
int* selfDividingNumbers(int left, int right, int* returnSize){
    int *self=(int *)malloc(sizeof(int)*(10000));
    int i,j=0,len=0;
    for(i=left;i<=right;i++){
        if(judge(i)){
            self[j++]=i;
            len++;
        }
    }
    *returnSize=len;
    return self;
}
