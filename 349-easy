/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* intersection(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){
    int len=nums1Size;
    int *temp=(int *)malloc(sizeof(int)*len);
    int i,j,k=0;
    for(i=0;i<nums1Size;i++){
        for(j=0;j<nums2Size;j++){
            if(nums1[i]==nums2[j]){
                temp[k++]=nums1[i];
                break;
            }
        }
    }
    if(k==0){
        *returnSize=0;
        return NULL;
    }
    else{
        int flag[k];
        for(i=0;i<k;i++)flag[i]=0;
        for(i=0;i<k-1;i++){
            for(j=i+1;j<k;j++){
                if(temp[i]==temp[j]){
                    flag[j]=1;
                }
            }
        }
        int cnt=0;
        for(i=0;i<k;i++){
            if(flag[i]==0)cnt++;
        }
        *returnSize=0;
        int *ans=(int *)malloc(sizeof(int)*cnt);
        for(i=0;i<k;i++){
            if(flag[i]==0){
                ans[(*returnSize)++]=temp[i];
            }
        }
        return ans;
    }
}
